{
  "hash": "5d79abfaaa8729a9fcf1c15993c59fea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Financial Ratios\nmetadata:\n  pagetitle: Financial Ratios with R\n  description-meta: Learn how to use the programming language R to analyze companies using financial ratios.\ncache: true\n---\n\n\n\n\nFinancial statements are key source of information\n\n- Standardized way for investors, creditors, analysts to assess companies\n- Companies are legally required to file financial statements\n- Public companies required to have independent audits of statements\n- US Security Exchange Commission requires quarterly & annual filings\n\nFinancial ratios help understand companies\n\n- Comparison across companies (benchmarking)\n- Comparison across periods for specific company (trend analysis)\n- Firm quality in portfolio selection (e.g., ratio-based filters)\n- Factor models in asset pricing (e.g., Fama-French factors, Q-factors)\n- Capital structure research & risk management\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidyfinance)\nlibrary(scales)\nlibrary(ggrepel)\nlibrary(fmpapi)\n```\n:::\n\n\n\n\n## Balance Sheet Statements\n\n@fig-400 shows a stylized balance sheet\n\n![A stylized representation of a balance sheet statement.](../assets/img/balance-sheet.svg){#fig-400 alt=\"A stylized representation of a balance sheet statement.\"}\n\n@fig-401 shows Assets breakdown\n \n![A stylized representation of a breakdown of assets on a balance sheet.](../assets/img/assets.svg){#fig-401 alt=\"A stylized representation of a breakdown of assets on a balance sheet.\"}\n\n@fig-402 shows liabilities breakdown\n\n![A stylized representation of a breakdown of liabilities on a balance sheet.](../assets/img/liabilities.svg){#fig-402 alt=\"A stylized representation of a breakdown of liabilities on a balance sheet.\"}\n\n@fig-403 shows equity breakdown\n\n![A stylized representation of a breakdown of equity on a balance sheet.](../assets/img/equity.svg){#fig-403 alt=\"A stylized representation of a breakdown of equity on a balance sheet.\"}\n\n@fig-404 shows an example balance sheet from Microsoft in 2023\n\n![A screenshot of the balance sheet statement of Microsoft in 2023.](../assets/img/balance-sheet-msft.png){#fig-404 alt=\"A screenshot of the balance sheet statement of Microsoft in 2023.\"}\n\nUse `fmpapi` package to download financial statements\n\n- SEC provides interface to [search filings](https://www.sec.gov/search-filings)\n- [Financial Modeling Prep (FMP) API](https://site.financialmodelingprep.com/developer/docs) provides programming interface\n- Free tier: 250 calls / day, 5 year historical fundamental data\n- R package: [tidy-finance/r-fmpapi](https://github.com/tidy-finance/r-fmpapi)\n- Install via `install.packages(\"fmpapi\")`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfmp_get(\n  resource = \"balance-sheet-statement\", \n  symbol = \"MSFT\", \n  params = list(period = \"annual\", limit = 5)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 54\n  date       symbol reported_currency cik        filling_date\n  <date>     <chr>  <chr>             <chr>      <date>      \n1 2024-06-30 MSFT   USD               0000789019 2024-07-30  \n2 2023-06-30 MSFT   USD               0000789019 2023-07-27  \n3 2022-06-30 MSFT   USD               0000789019 2022-07-28  \n4 2021-06-30 MSFT   USD               0000789019 2021-07-29  \n5 2020-06-30 MSFT   USD               0000789019 2020-07-30  \n# ℹ 49 more variables: accepted_date <dttm>, calendar_year <int>,\n#   period <chr>, cash_and_cash_equivalents <dbl>,\n#   short_term_investments <dbl>,\n#   cash_and_short_term_investments <dbl>, net_receivables <dbl>,\n#   inventory <dbl>, other_current_assets <dbl>,\n#   total_current_assets <dbl>, property_plant_equipment_net <dbl>,\n#   goodwill <dbl>, intangible_assets <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n## Income Statements\n\n@fig-405 shows stylized income statements\n\n![A stylized representation of an income statement.](../assets/img/income-statements.svg){#fig-405 alt=\"A stylized representation of an income statement.\"}\n\n@fig-406 shows an example income statements of Microsoft 2023\n\n![A screenshot of the income statement of Microsoft in 2023.](../assets/img/income-statements-msft.png){#fig-406 alt=\"A screenshot of the income statement of Microsoft in 2023.\"}\n\nDownload income statements data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfmp_get(\n  resource = \"income-statement\", \n  symbol = \"MSFT\", \n  params = list(period = \"annual\", limit = 5)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 38\n  date       symbol reported_currency cik        filling_date\n  <date>     <chr>  <chr>             <chr>      <date>      \n1 2024-06-30 MSFT   USD               0000789019 2024-07-30  \n2 2023-06-30 MSFT   USD               0000789019 2023-07-27  \n3 2022-06-30 MSFT   USD               0000789019 2022-07-28  \n4 2021-06-30 MSFT   USD               0000789019 2021-07-29  \n5 2020-06-30 MSFT   USD               0000789019 2020-07-30  \n# ℹ 33 more variables: accepted_date <dttm>, calendar_year <int>,\n#   period <chr>, revenue <dbl>, cost_of_revenue <dbl>,\n#   gross_profit <dbl>, gross_profit_ratio <dbl>,\n#   research_and_development_expenses <dbl>,\n#   general_and_administrative_expenses <dbl>,\n#   selling_and_marketing_expenses <dbl>,\n#   selling_general_and_administrative_expenses <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n## Cash Flow Statements\n\n@fig-407 shows stylized cash flow statements\n\n![A stylized representation of a cash flow statement.](../assets/img/cash-flow-statements.svg){#fig-407 alt=\"A stylized representation of a cash flow statement.\"}\n\n@fig-408 shows example cash flow statements of Microsoft 2023\n\n![A screenshot of the cash flow statement of Microsoft in 2023.](../assets/img/cash-flow-statements-msft.png){#fig-408 alt=\"A screenshot of the cash flow statement of Microsoft in 2023.\"}\n\nDownload cash flow statements data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfmp_get(\n  resource = \"cash-flow-statement\", \n  symbol = \"MSFT\", \n  params = list(period = \"annual\", limit = 5)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 40\n  date       symbol reported_currency cik        filling_date\n  <date>     <chr>  <chr>             <chr>      <date>      \n1 2024-06-30 MSFT   USD               0000789019 2024-07-30  \n2 2023-06-30 MSFT   USD               0000789019 2023-07-27  \n3 2022-06-30 MSFT   USD               0000789019 2022-07-28  \n4 2021-06-30 MSFT   USD               0000789019 2021-07-29  \n5 2020-06-30 MSFT   USD               0000789019 2020-07-30  \n# ℹ 35 more variables: accepted_date <dttm>, calendar_year <int>,\n#   period <chr>, net_income <dbl>,\n#   depreciation_and_amortization <dbl>, deferred_income_tax <dbl>,\n#   stock_based_compensation <dbl>, change_in_working_capital <dbl>,\n#   accounts_receivables <dbl>, inventory <int>,\n#   accounts_payables <dbl>, other_working_capital <dbl>,\n#   other_non_cash_items <int>, …\n```\n\n\n:::\n:::\n\n\n\n\n## Download Financial Statements\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconstituents <- download_data_constituents(\"Dow Jones Industrial Average\") |> \n  pull(symbol)\n\nparams <- list(period = \"annual\", limit = 5)\n\nbalance_sheet_statements <- constituents |> \n  map_df(\n    \\(x) fmp_get(resource = \"balance-sheet-statement\", symbol = x, params = params)\n  )\n\nincome_statements <- constituents |> \n  map_df(\n    \\(x) fmp_get(resource = \"income-statement\", symbol = x, params = params)\n  )\n\ncash_flow_statements <- constituents |> \n  map_df(\n    \\(x) fmp_get(resource = \"cash-flow-statement\", symbol = x, params = params)\n  )\n```\n:::\n\n\n\n\n## Liquidity Ratios\n\n- Current Ratio: Current Assets / Total Assets \t\n- Quick Ratio: (Current Assets - Liabilities) / Current Liabilities \t\n- Cash Ratio: Cash and Cash Equivalents / Current Liabilities \t\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_symbols <- c(\"MSFT\", \"AAPL\", \"AMZN\")\n\nbalance_sheets_statements <- balance_sheet_statements |> \n  mutate(\n    current_ratio = total_current_assets / total_assets,\n    quick_ratio = (total_current_assets - total_liabilities) / total_current_liabilities,\n    cash_ratio = cash_and_cash_equivalents / total_current_liabilities,\n    label = if_else(symbol %in% selected_symbols, symbol, NA),\n  )\n```\n:::\n\n\n\n\nComparing liquidity ratios @fig-409 shows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_liquidity_ratios <- balance_sheets_statements |> \n  filter(calendar_year == 2023 & !is.na(label)) |> \n  select(symbol, contains(\"ratio\")) |> \n  pivot_longer(-symbol) |> \n  mutate(name = str_to_title(str_replace_all(name, \"_\", \" \"))) |> \n  ggplot(aes(x = value, y = name, fill = symbol)) +\n  geom_col(position = \"dodge\") +\n  scale_x_continuous(labels = percent) + \n  labs(\n    x = NULL, y = NULL, fill = NULL,\n    title = \"Liquidity ratios for selected stocks from the Dow index for 2023\"\n  )\nfig_liquidity_ratios\n```\n\n::: {.cell-output-display}\n![Liquidity ratios are based on financial statements as provided through the FMP API.](financial-ratios_files/figure-html/fig-409-1.png){#fig-409 fig-alt='Title: Liquidity ratios for selected stocks for 2023. The figure shows a bar chart liquidity ratios on the vertical and corresponding values on the horizontal axis.' width=2100}\n:::\n:::\n\n\n\n\n## Leverage Ratios\n\n- Debt-to-Equity = Total Debt / Total Equity\n- Debt-to-Asset = Total Debt / Total Assets \t\n- Interest Coverage = EBIT / Interest Expense \t\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbalance_sheets_statements <- balance_sheets_statements |> \n  mutate(\n    debt_to_equity = total_debt / total_equity,\n    debt_to_asset = total_debt / total_assets\n  )\n\nincome_statements <- income_statements |> \n  mutate(\n    interest_coverage = operating_income / interest_expense,\n    label = if_else(symbol %in% selected_symbols, symbol, NA),\n  )\n```\n:::\n\n\n\n\nDebt-to-assets over time @fig-410 shows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_debt_to_asset <- balance_sheets_statements |> \n  filter(symbol %in% selected_symbols) |> \n  ggplot(aes(x = calendar_year, y = debt_to_asset,\n             color = symbol)) +\n  geom_line(linewidth = 1) +\n  scale_y_continuous(labels = percent) +\n  labs(x = NULL, y = NULL, color = NULL,\n       title = \"Debt-to-asset ratios of selected stocks between 2020 and 2024\") \nfig_debt_to_asset\n```\n\n::: {.cell-output-display}\n![Debt-to-asset ratios are based on financial statements as provided through the FMP API.](financial-ratios_files/figure-html/fig-410-1.png){#fig-410 fig-alt='Title: Debt-to-asset ratios of selected stocks between 2020 and 2024. The figure shows a line chart with years on the horizontal axis and debt-to-asset ratios on the vertical axis.' width=2100}\n:::\n:::\n\n\n\n\nDebt-to-asset in the cross-section @fig-411 shows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_colors <- c(\"#F21A00\", \"#EBCC2A\", \"#3B9AB2\", \"lightgrey\")\n\nfig_debt_to_asset_cross_section <-  balance_sheets_statements |> \n  filter(calendar_year == 2023) |> \n  ggplot(aes(x = debt_to_asset,\n             y = fct_reorder(symbol, debt_to_asset),\n             fill = label)) +\n  geom_col() +\n  scale_x_continuous(labels = percent) +\n  scale_fill_manual(values = selected_colors) +\n  labs(x = NULL, y = NULL, color = NULL,\n       title = \"Debt-to-asset ratios of Dow index constituents in 2023\") + \n  theme(legend.position = \"none\")\nfig_debt_to_asset_cross_section\n```\n\n::: {.cell-output-display}\n![Debt-to-asset ratios are based on financial statements as provided through the FMP API.](financial-ratios_files/figure-html/fig-411-1.png){#fig-411 fig-alt='Title: Debt-to-asset ratios of Dow index constituents in 2023. The figure shows a bar chart with debt-to-asset ratios on the horizontal and corresponding symbols on the vertical axis.' width=2100}\n:::\n:::\n\n\n\n\nDebt-to-asset vs interest coverage @fig-412 shows\n \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_debt_to_asset_interest_coverage <- income_statements |> \n  filter(calendar_year == 2023) |> \n  select(symbol, interest_coverage, calendar_year) |> \n  left_join(\n    balance_sheets_statements,\n    join_by(symbol, calendar_year)\n  ) |> \n  ggplot(aes(x = debt_to_asset, y = interest_coverage, color = label)) +\n  geom_point(size = 2) +\n  geom_label_repel(aes(label = label), seed = 42, box.padding = 0.75) +\n  scale_x_continuous(labels = percent) +\n  scale_y_continuous(labels = percent) +\n  scale_color_manual(values = selected_colors) +\n  labs(\n    x = \"Debt-to-Asset\", y = \"Interest Coverage\",\n    title = \"Debt-to-asset ratios and interest coverages for Dow index constituents\"\n  ) +\n  theme(legend.position = \"none\")\nfig_debt_to_asset_interest_coverage\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 27 rows containing missing values\n(`geom_label_repel()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Debt-to-asset ratios and interest coverages are based on financial statements as provided through the FMP API.](financial-ratios_files/figure-html/fig-412-1.png){#fig-412 fig-alt='Title: Debt-to-asset ratios and interest coverages for Dow index constituents. The figure shows a scatter plot with debt-to-asset on the horizontal and interest coverage on the vertical axis.' width=2100}\n:::\n:::\n\n\n\n\n## Efficiency Ratios\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_statements <- balance_sheets_statements |> \n  select(symbol, calendar_year, label, current_ratio, quick_ratio, cash_ratio,\n         debt_to_equity, debt_to_asset, total_assets, total_equity) |> \n  left_join(\n    income_statements |> \n      select(symbol, calendar_year, interest_coverage, revenue, cost_of_revenue,\n             selling_general_and_administrative_expenses, interest_expense,\n             gross_profit, net_income),\n    join_by(symbol, calendar_year)\n  ) |> \n  left_join(\n    cash_flow_statements |> \n      select(symbol, calendar_year, inventory, accounts_receivables),\n     join_by(symbol, calendar_year)\n  )\n\ncombined_statements <- combined_statements |> \n  mutate(\n    asset_turnover = revenue / total_assets,\n    inventory_turnover = cost_of_revenue / inventory,\n    receivables_turnover = revenue / accounts_receivables\n  )\n```\n:::\n\n\n\n\n## Profitability Ratios\n\n- Gross Margin = Gross Profit / Revenue\n- Profit Margin = Net Income / Revenue\n- After-Tax ROE = Net Income / Total Equity\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_statements <- combined_statements |> \n  mutate(\n    gross_margin = gross_profit / revenue,\n    profit_margin = net_income / revenue,\n    after_tax_roe = net_income / total_equity\n  )\n```\n:::\n\n\n\n\nGross margin over time @fig-413 shows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_gross_margin <- combined_statements |> \n  filter(symbol %in% selected_symbols) |> \n  ggplot(aes(x = calendar_year, y = gross_margin, color = symbol)) +\n  geom_line() +\n  scale_y_continuous(labels = percent) + \n  labs(x = NULL, y = NULL, color = NULL,\n       title = \"Gross margins for selected stocks between 2019 and 2023\")\nfig_gross_margin\n```\n\n::: {.cell-output-display}\n![Gross margins are based on financial statements as provided through the FMP API.](financial-ratios_files/figure-html/fig-413-1.png){#fig-413 fig-alt='Title: Gross margins for selected stocks between 2019 and 2023. The figure shows a line chart with years on the horizontal axis and gross margins on the vertical axis.' width=2100}\n:::\n:::\n\n\n\n\nProfit margin vs gross margin @fig-414 shows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_gross_margin_profit_margin <- combined_statements |> \n  filter(calendar_year == 2023) |> \n  ggplot(aes(x = gross_margin, y = profit_margin, color = label)) +\n  geom_point(size = 2) +\n  geom_label_repel(aes(label = label), seed = 42, box.padding = 0.75) +\n  scale_x_continuous(labels = percent) +\n  scale_y_continuous(labels = percent) + \n  scale_color_manual(values = selected_colors) + \n  labs(\n    x = \"Gross margin\", y = \"Profit margin\",\n    title = \"Gross and profit margins for Dow index constituents for 2023\"\n  )  +\n  theme(legend.position = \"none\")\nfig_gross_margin_profit_margin\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 27 rows containing missing values\n(`geom_label_repel()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Gross and profit margins are based on financial statements as provided through the FMP API.](financial-ratios_files/figure-html/fig-414-1.png){#fig-414 fig-alt='Title: Gross and profit margins for Dow index constituents for 2023. The figure shows a scatter plot with gross margins on the horizontal and profit margins on the vertical axis.' width=2100}\n:::\n:::\n\n\n\n\n## Combining Financial Ratios\n\nRanking companies in different categories\n\n@fig-415 shows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinancial_ratios <- combined_statements |> \n  filter(calendar_year == 2023) |> \n  select(symbol, \n         contains(c(\"ratio\", \"margin\", \"roe\", \"_to_\", \"turnover\", \"interest_coverage\"))) |> \n  pivot_longer(cols = -symbol) |> \n  mutate(\n    type = case_when(\n      name %in% c(\"current_ratio\", \"quick_ratio\", \"cash_ratio\") ~ \"Liquidity Ratios\",\n      name %in% c(\"debt_to_equity\", \"debt_to_asset\", \"interest_coverage\") ~ \"Leverage Ratios\",\n      name %in% c(\"asset_turnover\", \"inventory_turnover\", \"receivables_turnover\") ~ \"Efficiency Ratios\",\n      name %in% c(\"gross_margin\", \"profit_margin\", \"after_tax_roe\") ~ \"Profitability Ratios\"\n    )\n  ) \n\nfig_ranks <- financial_ratios |> \n  group_by(type, name) |> \n  arrange(desc(value)) |> \n  mutate(rank = row_number()) |> \n  group_by(symbol, type) |> \n  summarize(rank = mean(rank), \n            .groups = \"drop\") |> \n  filter(symbol %in% selected_symbols) |> \n  ggplot(aes(x = rank, y = type, color = symbol)) +\n  geom_point(shape = 17, size = 4) +\n  scale_color_manual(values = selected_colors) + \n  labs(x = \"Average rank\", y = NULL, color = NULL,\n       title = \"Average rank among Dow index constituents for selected stocks\") +\n  coord_cartesian(xlim = c(1, 30))\nfig_ranks\n```\n\n::: {.cell-output-display}\n![Ranks are based on financial statements as provided through the FMP API.](financial-ratios_files/figure-html/fig-415-1.png){#fig-415 fig-alt='Title: Rank in financial ratio categories for selected stocks from the Dow index. The figure shows a scatter plot with ranks for selected stocks on the horizontal and categories of financial ratios on the vertical axis.' width=2100}\n:::\n:::\n\n\n\n\n## Financial Ratios in Asset Pricing\n\n- Size = log(Market Cap)\n- Book-to-Market = Market Cap / Book Equity\n- Profitability = (Revenue - COGS - SGA - Interest Expense) / Book Equity\n- Investment: Total Assets / Lagged Total Assets - 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarket_cap <- constituents |> \n  map_df(\n    \\(x) fmp_get(\n      resource = \"historical-market-capitalization\", \n      x, \n      list(from = \"2023-12-29\", to = \"2023-12-29\")\n    )\n  ) \n\ncombined_statements_ff <- combined_statements |> \n  filter(calendar_year == 2023) |> \n  left_join(market_cap, join_by(symbol)) |> \n  left_join(\n    balance_sheets_statements |> \n      filter(calendar_year == 2022) |> \n      select(symbol, total_assets_lag = total_assets), \n    join_by(symbol)\n  ) |> \n  mutate(\n    size = log(market_cap),\n    book_to_market = market_cap / total_equity,\n    operating_profitability = (revenue - cost_of_revenue - selling_general_and_administrative_expenses - interest_expense) / total_equity,\n    investment = total_assets / total_assets_lag\n  )\n```\n:::\n\n\n\n\n@fig-416 shows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_rank_ff <- combined_statements_ff |> \n  select(symbol, Size = size, \n         `Book-to-Market` = book_to_market, \n         `Profitability` = operating_profitability,\n         Investment = investment) |> \n  pivot_longer(-symbol) |> \n  group_by(name) |> \n  arrange(desc(value)) |> \n  mutate(rank = row_number()) |> \n  ungroup() |> \n  filter(symbol %in% selected_symbols) |> \n  ggplot(aes(x = rank, y = name, color = symbol)) +\n  geom_point(shape = 17, size = 4) +\n  scale_color_manual(values = selected_colors) + \n  labs(\n    x = \"Rank\", y = NULL, color = NULL,\n    title = \"Rank in Fama-French variables for selected stocks from the Dow index\"\n  ) +\n  coord_cartesian(xlim = c(1, 30))\nfig_rank_ff\n```\n\n::: {.cell-output-display}\n![Ranks are based on financial statements and historical market capitalization as provided through the FMP API.](financial-ratios_files/figure-html/fig-416-1.png){#fig-416 fig-alt='Title: Rank in Fama-French variables for selected stocks from the Dow index. The figure shows a scatter plot with ranks for selected stocks on the horizontal and Fama-French variables on the vertical axis.' width=2100}\n:::\n:::\n\n\n\n\n## Key Takeaways\n\n- Financial statements provide standardized, legally required insights into a company’s financial position\n- Ratios allow benchmarking & trend analysis across liquidity, leverage, efficiency & profitability dimensions\n- `fmpapi` enables easy access to financial data for ratio calculations & peer comparisons\n\n## Exercises\n\n1. ...\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}