{
  "hash": "35794a8526818fe3aa9679072ee29e40",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Modern Portfolio Theory\nmetadata:\n  pagetitle: Modern Portfolio Theory with R\n  description-meta: Learn how to use the programming language R for implementing the Markowitz model for portfolio optimization.\n---\n\n\n\n\nIn the previous chapter, we showed how to download stock market data and analyze them with graphs and summary statistics. Now, we move to a typical question in Finance: how should wealth be allocated across assets with varying returns, risks, and correlations to optimize a portfolio’s performance?\\index{Portfolio choice} Modern Portfolio Theory (MPT), introduced by [@Markowitz1952], revolutionized the way we think about such investments by formalizing the trade-off between risk and return. Markowitz’s framework laid the foundation for much of modern finance, earning him the Sveriges Riksbank Prize in Economic Sciences in 1990.\n\nMarkowitz demonstrates that portfolio risk depends not only on individual asset volatilities but also on the correlations between asset returns. This insight highlights the power of diversification: combining assets with low or negative correlations reduces overall portfolio risk. This principle is often illustrated with the analogy of a fruit basket: If all you have are apples & they spoil, you lose everything. With a variety of fruits, some fruits may spoil, but others will stay fresh.\n\nAt the heart of MPT is mean-variance analysis, which evaluates portfolios based on two dimensions: expected return and risk. By balancing these two factors, investors can construct portfolios that either maximize return for a given level of risk or minimize risk for a desired level of return.\n\nWe use the following packages throughout this chapter: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidyfinance)\nlibrary(scales)\nlibrary(ggrepel)\n```\n:::\n\n\n\n\n<!-- TODO: add citation and explanation for ggrepel -->\n\n## Estimate Expected Returns\n\nExpected returns, denoted as $\\mu_i$, represent the anticipated profit from holding an asset $i$. They are typically estimated using historical data by computing the average of past returns:\n\n$$\\hat{\\mu}_i = \\frac{1}{T} \\sum_{t=1}^{T} r_{it},$$\n\nwhere $r_{it}$ is the return of asset $i$ in period $t$, and $T$ is the total number of periods. While past performance does not guarantee future results, the typical assumption is that it is at least indicative of future performance.\n\nLeveraging the approach of [Working with Stock Returns](working-with-stock-returns.qmd), we download the constituents of the Dow Jones Industrial Average as an example portfolio, as well as their daily adjusted close prices:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsymbols <- download_data(\n  type = \"constituents\",\n  index = \"Dow Jones Industrial Average\"\n)\n\nprices_daily <- download_data(\n    type = \"stock_prices\", symbol = symbols$symbol,\n    start_date = \"2019-08-01\", end_date = \"2024-07-31\"\n) |> \n  select(symbol, date,  price = adjusted_close)\n\nprices_daily\n```\n:::\n\n\n\n\nThen, we proceed to calculate daily returns for each asset. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_daily <- prices_daily |>\n  group_by(symbol) |> \n  mutate(ret = price / lag(price) - 1) |>\n  ungroup() |> \n  select(symbol, date, ret) |> \n  drop_na(ret) |> \n  arrange(symbol, date)\n\nreturns_daily \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 37,680 × 3\n  symbol date           ret\n  <chr>  <date>       <dbl>\n1 AAPL   2019-08-02 -0.0212\n2 AAPL   2019-08-05 -0.0523\n3 AAPL   2019-08-06  0.0189\n4 AAPL   2019-08-07  0.0104\n5 AAPL   2019-08-08  0.0221\n# ℹ 37,675 more rows\n```\n\n\n:::\n:::\n\n\n\n\nWe can use the tidy return data to quickly calcualte the estimated expected return of each asset in the Dow Jones Industrial Average.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nassets <- returns_daily |> \n  group_by(symbol) |> \n  summarize(mu = mean(ret))\n```\n:::\n\n\n\n\nFigure @fig-201 shows the corresponding average daily returns of the constituents of our example portfolio. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_mu <- assets |> \n  ggplot(aes(x = mu, y = fct_reorder(symbol, mu), \n             fill = mu > 0)) +\n  geom_col() +\n  scale_x_continuous(labels = percent) + \n  labs(x = NULL, y = NULL, fill = NULL,\n       title = \"Average daily returns of Dow index constituents\")  +\n  theme(legend.position = \"none\")\nfig_mu\n```\n\n::: {.cell-output-display}\n![Average daily returns based on prices adjusted for dividend payments and stock splits.](modern-portfolio-theory_files/figure-html/fig-201-1.png){#fig-201 fig-alt='Title: Average daily stock returns of Dow index constituents. The figure shows 30 bars with average daily returns.' width=2100}\n:::\n:::\n\n\n\n\n## Estimate the Variance-Covariance Matrix\n\nIndividual asset risk in MPT is typically quantified using variance ($\\sigma^2$) or volatilities ($\\sigma$). The latter can be estimated as:\n\n$$\\hat{\\sigma}_i = \\sqrt{\\frac{1}{T-1} \\sum_{t=1}^{T} (r_{it} - \\hat{\\mu}_i)^2}$$\n\n\nNext, we transform the returns from a tidy tibble into a $(T \\times N)$ matrix with one column for each of the $N$ symbols and one row for each of the $T$ trading days to compute the sample average return vector $$\\hat\\mu = \\frac{1}{T}\\sum\\limits_{t=1}^T r_t$$ where $r_t$ is the $N$ vector of returns on date $t$ and the sample covariance matrix $$\\hat\\Sigma = \\frac{1}{T-1}\\sum\\limits_{t=1}^T (r_t - \\hat\\mu)(r_t - \\hat\\mu)'.$$ We achieve this by using `pivot_wider()` with the new column names from the column `symbol` and setting the values to `ret`. We compute the vector of sample average returns and the sample variance-covariance matrix, which we consider as proxies for the parameters of the distribution of future stock returns. Thus, for simplicity, we refer to $\\Sigma$ and $\\mu$ instead of explicitly highlighting that the sample moments are estimates. \\index{Covariance} In later chapters, we discuss the issues that arise once we take estimation uncertainty into account.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvolatilities <- returns_daily |> \n  group_by(symbol) |> \n  summarize(sigma = sd(ret))\n\nassets <- assets |> \n  left_join(volatilities, join_by(symbol))\n```\n:::\n\n\n\n\nFigure @fig-202 shows the corresponding invidiual stock volatitilies. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_sigma <- assets |> \n  ggplot(aes(x = sigma, y = fct_reorder(symbol, sigma))) +\n  geom_col() +\n  scale_x_continuous(labels = percent) + \n  labs(x = NULL, y = NULL,\n       title = \"Daily volatilities of Dow index constituents\")\nfig_sigma\n```\n\n::: {.cell-output-display}\n![Daily volatilities based on prices adjusted for dividend payments and stock splits.](modern-portfolio-theory_files/figure-html/fig-202-1.png){#fig-202 fig-alt='Title: Daily volatilities of DOW index constituents. The figure shows 30 bars with daily volatilities.' width=2100}\n:::\n:::\n\n\n\n\n*Covariance* measures interaction between assets\n\n$$\\hat{\\sigma}_{ij} = \\frac{1}{T-1} \\sum_{t=1}^{T} (R_{it} - \\hat{\\mu}_i)(R_{jt} - \\hat{\\mu}_j)$$\n\n**Interpretation**:\n\n- **Positive**: assets move in the same direction, potentially increasing portfolio risk\n- **Negative**: assets move in opposite directions, which can reduce risk through diversification\n\nEstimating the *variance-covariance matrix*\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_wide <- returns_daily |> \n  pivot_wider(names_from = symbol, values_from = ret) \n\nvcov <- returns_wide |> \n  select(-date) |> \n  cov()\n```\n:::\n\n\n\n\nFigure @fig-203 provides an illustration of the variance-covariance matrix. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_vcov <- vcov |> \n  as_tibble(rownames = \"symbol_a\") |> \n  pivot_longer(-symbol_a, names_to = \"symbol_b\") |> \n  ggplot(aes(x = symbol_a, y = fct_rev(symbol_b), fill = value)) +\n  geom_tile() +\n  labs(\n    x = NULL, y = NULL, fill = \"(Co-)Variance\",\n    title = \"Variance-covariance matrix of Dow index constituents\"\n  ) + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  guides(fill = guide_colorbar(barwidth = 15, barheight = 0.5))\nfig_vcov\n```\n\n::: {.cell-output-display}\n![Variances and covariances based on prices adjusted for dividend payments and stock splits.](modern-portfolio-theory_files/figure-html/fig-203-1.png){#fig-203 fig-alt='Title: Variance-covariance matrix of DOW index constituents. The figure shows 900 tiles with variances and covariances between each constituent-pair.' width=2100}\n:::\n:::\n\n\n\n\n## The Minimum-Variance Framework\n\n$\\text{Expected Portfolio Return} = \\sum_{i=1}^n \\omega_i \\hat{\\mu}_i$\n\n-\t$\\omega_i$: weight of asset $i$ in the portfolio\n- $\\hat{\\mu}_i$: estimated expected return of asset $i$\n\nExample:\n\n- Asset A: 60% weight, expected return 8%\n- Asset B: 40% weight, expected return 12%\n- $(0.6 \\times 8\\%) + (0.4 \\times 12\\%) = 9.6\\%$\n\n**Assumption**: portfolio weights are constant over time\n\nPortfolio variance is calculated as\n\n$$\\sum_{i=1}^{n} \\sum_{j=1}^{n} \\omega_i \\omega_j \\hat{\\sigma}_{ij}$$\n\n- $\\omega_i$,  $\\omega_j$: the weights of assets  $i$,  $j$  in the portfolio\n- $\\hat{\\sigma}_{ij}$: covariance between returns of assets  $i$  and  $j$\n-\t$n$: number of assets in portfolio\n\n**Minimize portfolio variance**\n\n$$\\min_{\\omega_1, ... \\omega_n} \\sum_{i=1}^{n} \\sum_{j=1}^{n} \\omega_i \\omega_j \\hat{\\sigma}_{ij}$$\n\nwhile staying **fully invested**\n\n$$\\sum_{i=1}^{n} \\omega_i = 1$$\n\nMinimum variance in *matrix notation*\n\n**Minimize portfolio variance**\n\n$$\\min_{\\omega} \\omega' \\hat{\\Sigma} \\omega$$\n\nwhile staying **fully invested**\n\n$$ \\omega'\\iota = 1$$\n\nSolution for minimum-variance portfolio\n\n$$\\omega_\\text{mvp} = \\frac{\\Sigma^{-1}\\iota}{\\iota'\\Sigma^{-1}\\iota}$$\n\n- $\\iota$: vector of 1's\n- $\\Sigma^{-1}$: inverse of variance-covariance matrix $\\Sigma$\n\nThen, we compute the minimum variance portfolio weights $\\omega_\\text{mvp}$ as well as the expected portfolio return $\\omega_\\text{mvp}'\\mu$ and volatility $\\sqrt{\\omega_\\text{mvp}'\\Sigma\\omega_\\text{mvp}}$ of this portfolio. \\index{Minimum variance portfolio} Recall that the minimum variance portfolio is the vector of portfolio weights that are the solution to $$\\omega_\\text{mvp} = \\arg\\min \\omega'\\Sigma \\omega \\text{ s.t. } \\sum\\limits_{i=1}^N\\omega_i = 1.$$ The constraint that weights sum up to one simply implies that all funds are distributed across the available asset universe, i.e., there is no possibility to retain cash. It is easy to show analytically that $\\omega_\\text{mvp} = \\frac{\\Sigma^{-1}\\iota}{\\iota'\\Sigma^{-1}\\iota}$, where $\\iota$ is a vector of ones and $\\Sigma^{-1}$ is the inverse of $\\Sigma$.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niota <- rep(1, dim(vcov)[1])\nvcov_inv <- solve(vcov)\nomega_mvp <- as.vector(vcov_inv %*% iota) / \n  as.numeric(t(iota) %*% vcov_inv %*% iota)\n```\n:::\n\n\n\n\nFigure @fig-204 shows the resulting portfolio weights. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nassets <- bind_cols(assets, omega_mvp = omega_mvp)\n\nfig_omega_mvp <- assets |>\n  ggplot(aes(x = omega_mvp, y = fct_reorder(symbol, omega_mvp), \n             fill = omega_mvp > 0)) +\n  geom_col() +\n  scale_x_continuous(labels = percent) + \n  labs(x = NULL, y = NULL, \n       title = \"Minimum-variance portfolio weights\") +\n  theme(legend.position = \"none\")\nfig_omega_mvp\n```\n\n::: {.cell-output-display}\n![Weights are based on returns adjusted for dividend payments and stock splits.](modern-portfolio-theory_files/figure-html/fig-204-1.png){#fig-204 fig-alt='Title: Minimum-variance portfolio weights. The figure shows a bar chart with portfolio weights for each DOW index constituent.' width=2100}\n:::\n:::\n\n\n\n\nMinimum-variance portfolio return\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu <- assets$mu\n\nsummary_mvp <- tibble(\n  mu = sum(omega_mvp * mu),\n  sigma = as.numeric(sqrt(t(omega_mvp) %*% vcov %*% omega_mvp)),\n  type = \"Minimum-Variance Portfolio\"\n)\n\nsummary_mvp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n        mu   sigma type                      \n     <dbl>   <dbl> <chr>                     \n1 0.000307 0.00937 Minimum-Variance Portfolio\n```\n\n\n:::\n:::\n\n\n\n\n## Efficient Portfolios\n\n**Minimize portfolio variance**\n\n$$\\min_{\\omega} \\omega' \\hat{\\Sigma} \\omega$$\n\nWhile earning **minimum expected return** $\\bar{\\mu}$\n\n- $$ \\omega'\\iota = 1$$\n- $\\omega'\\hat{\\mu} = \\bar{\\mu}$\n\nDow Jones vs Nasdaq 100\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload_data(\n  type = \"stock_prices\", \n  symbol = c(\"^DJI\", \"^NDX\"), \n  start_date = \"2019-08-01\", end_date = \"2024-07-31\"\n) |> \n  group_by(symbol) |> \n  arrange(date) |> \n  mutate(adjusted_close = adjusted_close / first(adjusted_close)) |> \n  ggplot(aes(x = date, y = adjusted_close, color = symbol)) +\n  geom_line() +\n  scale_y_continuous(labels = percent) + \n  labs(x = NULL, y = NULL, color = NULL,\n       title = \"Performance of Dow (^DJI) vs Nasdaq 100 (^NDX)\",\n       subtitle = \"Both indexes start at 100%\") \n```\n\n::: {.cell-output-display}\n![](modern-portfolio-theory_files/figure-html/unnamed-chunk-13-1.png){width=2100}\n:::\n:::\n\n\n\n\nChoose a minimum expected return: Achieve at least average Nasdaq 100 return:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu_bar <- download_data(\n  \"stock_prices\", symbol = \"^NDX\", \n  start_date = \"2019-08-01\", end_date = \"2024-07-31\"\n) |> \n  mutate(\n    ret = adjusted_close / lag(adjusted_close) - 1\n  ) |> \n  summarize(mean(ret, na.rm = TRUE)) |> \n  pull() \n```\n:::\n\n\n\n\n**Note:** $\\bar\\mu$ needs to be higher than $\\hat\\mu_{mvp}$\n\nSolution for efficient portfolio:\n\n$$\\omega_{efp} = \\frac{\\lambda^*}{2}\\left(\\Sigma^{-1}\\mu -\\frac{D}{C}\\Sigma^{-1}\\iota \\right)$$ \n\nwhere $\\lambda^* = 2\\frac{\\bar\\mu - D/C}{E-D^2/C}$, $C = \\iota'\\Sigma^{-1}\\iota$, $D=\\iota'\\Sigma^{-1}\\mu$ & $E=\\mu'\\Sigma^{-1}\\mu$\n\nSee details on [tidy-finance.org](https://www.tidy-finance.org/r/introduction-to-tidy-finance.html#the-efficient-frontier)\n\nCalculate efficient portfolio\n\nThe command `solve(A, b)` returns the solution of a system of equations $Ax = b$. If `b` is not provided, as in the example above, it defaults to the identity matrix such that `solve(sigma)` delivers $\\Sigma^{-1}$ (if a unique solution exists).\\\nNote that the *monthly* volatility of the minimum variance portfolio is of the same order of magnitude as the *daily* standard deviation of the individual components. Thus, the diversification benefits in terms of risk reduction are tremendous!\\index{Diversification}\n\nNext, we set out to find the weights for a portfolio that achieves, as an example, three times the expected return of the minimum variance portfolio. However, mean-variance investors are not interested in any portfolio that achieves the required return but rather in the efficient portfolio, i.e., the portfolio with the lowest standard deviation. If you wonder where the solution $\\omega_\\text{eff}$ comes from: \\index{Efficient portfolio} The efficient portfolio is chosen by an investor who aims to achieve minimum variance *given a minimum acceptable expected return* $\\bar{\\mu}$. Hence, their objective function is to choose $\\omega_\\text{eff}$ as the solution to $$\\omega_\\text{eff}(\\bar{\\mu}) = \\arg\\min \\omega'\\Sigma \\omega \\text{ s.t. } \\omega'\\iota = 1 \\text{ and } \\omega'\\mu \\geq \\bar{\\mu}.$$\n\nThe code below implements the analytic solution to this optimization problem for a benchmark return $\\bar\\mu$, which we set to 3 times the expected return of the minimum variance portfolio. We encourage you to verify that it is correct.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nC <- as.numeric(t(iota) %*% vcov_inv %*% iota)\nD <- as.numeric(t(iota) %*% vcov_inv %*% mu)\nE <- as.numeric(t(mu) %*% vcov_inv %*% mu)\nlambda_tilde <- as.numeric(2 * (mu_bar - D / C) / (E - D^2 / C))\nomega_efp <- as.vector(omega_mvp + lambda_tilde / 2 * (vcov_inv %*% mu - D * omega_mvp))\n\nsummary_efp <- tibble(\n  mu = sum(omega_efp * mu),\n  sigma = as.numeric(sqrt(t(omega_efp) %*% vcov %*% omega_efp)),\n  type = \"Efficient Portfolio\"\n)\n```\n:::\n\n\n\n\nFigure @fig-205 sows the average return and volatility of the the minimum-variance and efficient portfolio relative to the index constituents. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummaries <- bind_rows(\n  assets, summary_mvp, summary_efp\n) \n\nfig_summaries <- summaries |> \n  ggplot(aes(x = sigma, y = mu)) +\n  geom_point(\n    data = summaries |> filter(is.na(type))\n  ) +\n  geom_point(\n    data = summaries |> filter(!is.na(type)), color = \"#F21A00\", size = 3\n  ) +\n  geom_label_repel(aes(label = type)) +\n  scale_x_continuous(labels = percent) +\n  scale_y_continuous(labels = percent) + \n  labs(\n    x = \"Volatility\", y = \"Average return\",\n    title = \"Efficient & minimum-variance portfolios for Dow index constituents\"\n    ) \nfig_summaries\n```\n\n::: {.cell-output-display}\n![The big dots indicate the location of the minimum variance and the efficient portfolio that delivers the expected return of the Nasdaq 100, respectively. The small dots indicate the location of the individual constituents.](modern-portfolio-theory_files/figure-html/fig-205-1.png){#fig-205 fig-alt='Title: Minimum-variance portfolio weights. The figure shows a bar chart with portfolio weights for each Dow index constituent.' width=2100}\n:::\n:::\n\n\n\n\n## The Efficient Frontier\n\n\\index{Efficient frontier} An essential tool to evaluate portfolios in the mean-variance context is the *efficient frontier*, the set of portfolios which satisfies the condition that no other portfolio exists with a higher expected return but with the same volatility (the square root of the variance, i.e., the risk), see, e.g., @Merton1972.\\index{Return volatility} We compute and visualize the efficient frontier for several stocks. First, we extract each asset's *monthly* returns. In order to keep things simple, we work with a balanced panel and exclude Dow constituents for which we do not observe a price on every single trading day since the year 2000.\n\n\\index{Separation theorem} The [mutual fund separation theorem](https://en.wikipedia.org/wiki/Mutual_fund_separation_theorem) states that as soon as we have two efficient portfolios (such as the minimum variance portfolio $\\omega_\\text{mvp}$ and the efficient portfolio for a higher required level of expected returns $\\omega_\\text{eff}(\\bar{\\mu})$, we can characterize the entire efficient frontier by combining these two portfolios. That is, any linear combination of the two portfolio weights will again represent an efficient portfolio. \\index{Efficient frontier} The code below implements the construction of the *efficient frontier*, which characterizes the highest expected return achievable at each level of risk.\n\n$$\\omega_{eff} = a \\cdot \\omega_{efp} + (1-a) \\cdot\\omega_{mvp}$$\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nefficient_frontier <- tibble(\n  a = seq(from = -1, to = 4, by = 0.01),\n) |> \n  mutate(\n    omega = map(a, ~ .x * omega_efp + (1 - .x) * omega_mvp),\n    mu = map_dbl(omega, ~ t(.x) %*% mu),\n    sigma = map_dbl(omega, ~ sqrt(t(.x) %*% vcov %*% .x)),\n  ) \n```\n:::\n\n\n\n\nThe code above proceeds in two steps: First, we compute a vector of combination weights $a$ and then we evaluate the resulting linear combination with $a\\in\\mathbb{R}$:\\\n$$\\omega^* = a\\omega_\\text{eff}(\\bar\\mu) + (1-a)\\omega_\\text{mvp} = \\omega_\\text{mvp} + \\frac{\\lambda^*}{2}\\left(\\Sigma^{-1}\\mu -\\frac{D}{C}\\Sigma^{-1}\\iota \\right)$$ with $\\lambda^* = 2\\frac{a\\bar\\mu + (1-a)\\tilde\\mu - D/C}{E-D^2/C}$ where $C = \\iota'\\Sigma^{-1}\\iota$, $D=\\iota'\\Sigma^{-1}\\mu$, and $E=\\mu'\\Sigma^{-1}\\mu$. Finally, it is simple to visualize the efficient frontier alongside the two efficient portfolios within one powerful figure using `ggplot` (see @fig-206). We also add the individual stocks in the same call. We compute annualized returns based on the simple assumption that monthly returns are independent and identically distributed. Thus, the average annualized return is just 12 times the expected monthly return.\\index{Graph!Efficient frontier}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummaries <- bind_rows(\n    summaries, efficient_frontier\n  )\n\nfig_efficient_frontier <- summaries |> \n  ggplot(aes(x = sigma, y = mu)) +\n  geom_point(\n    data = summaries |> filter(is.na(type))\n  ) +\n  geom_point(\n    data = summaries |> filter(!is.na(type)), color = \"#F21A00\", size = 3\n  ) +\n  geom_label_repel(aes(label = type)) +\n  scale_x_continuous(labels = percent) +\n  scale_y_continuous(labels = percent) + \n  labs(x = \"Volatility\", y = \"Average return\",\n       title = \"Efficient frontier for Dow index constituents\") + \n  theme(legend.position = \"none\")\nfig_efficient_frontier\n```\n\n::: {.cell-output-display}\n![The big dots indicate the location of the minimum variance and the efficient portfolio that delivers 3 times the expected return of the minimum variance portfolio, respectively. The small dots indicate the location of the individual constituents.](modern-portfolio-theory_files/figure-html/fig-206-1.png){#fig-206 fig-alt='Title: Efficient frontier for Dow index constituents. The figure shows Dow index constituents in a mean-variance diagram. A hyperbola indicates the efficient frontier of portfolios that dominate the individual holdings in the sense that they deliver higher expected returns for the same level of volatility.' width=2100}\n:::\n:::\n\n\n\n\n## Extending the Markowitz Model\n\nReplicate minimum-variance via `PortfolioAnalytics` package. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(PortfolioAnalytics)\nlibrary(CVXR)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_matrix <- column_to_rownames(\n  returns_wide, var = \"date\"\n)\n\nproblem_mvp <- portfolio.spec(colnames(returns_matrix)) |>\n  add.objective(type = \"risk\", name = \"var\") |> \n  add.constraint(\"full_investment\")\n\nsolution_mvp <- optimize.portfolio(\n  returns_matrix, problem_mvp, optimize_method = \"CVXR\"\n)\n\nall.equal(omega_mvp, as.vector(solution_mvp$weights))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n\nReplicate efficient portfolio via *PortfolioAnalytics*\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproblem_efp <- problem_mvp |> \n  add.constraint(\"return\", return_target = mu_bar)\n\nsolution_efp <- optimize.portfolio(\n  returns_matrix, problem_efp, optimize_method = \"CVXR\"\n)\n\nall.equal(omega_efp, as.vector(solution_efp$weights)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n\nEasy to extend Markowitz model\n\n- Short sale constraints: `add.constraint(\"long_only\")`\n- Position limit: `add.constraint(\"position_limit\", max_pos = 10)`\n- Expected shortfall: `add.objective(type = \"risk\", name = \"ES\")`\n\n.. and many more, see [official *PortfolioAnalytics* vignette](https://cran.r-project.org/web/packages/PortfolioAnalytics/vignettes/portfolio_vignette.pdf) \n\n- Mean-variance framework is a cornerstone of finance\n- Download financial data using `tidyfinance` package\n- Easy to compute analytic solutions 'manually'\n- Implement extensions using `PortfolioAnalytics`\n- More advanced: [constrained optimization & backtesting](https://www.tidy-finance.org/r/constrained-optimization-and-backtesting.html)\n\n## Key Takeaways\n\n...\n\n## Exercises\n\n1. In the portfolio choice analysis, we restricted our sample to all assets trading every day since 2000. How is such a decision a problem when you want to infer future expected portfolio performance from the results?\n1. The efficient frontier characterizes the portfolios with the highest expected return for different levels of risk. Identify the portfolio with the highest expected return per standard deviation. Which famous performance measure is close to the ratio of average returns to the standard deviation of returns?",
    "supporting": [
      "modern-portfolio-theory_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}